{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport checkString from './utils/validate';\nimport CrudItem from './CrudItem.vue';\nimport CrudRemanining from './CrudRemanining.vue';\nimport CrudCheckAll from './CrudCheckAll.vue';\nexport default {\n  name: 'todo-list',\n  components: {\n    CrudItem,\n    CrudRemanining,\n    CrudCheckAll\n  },\n  data() {\n    return {\n      newTodo: '',\n      idForTodo: 3,\n      lastTitle: '',\n      idlist: [],\n      todos: [{\n        id: 1,\n        title: 'Playing Football',\n        completed: false,\n        editing: false\n      }, {\n        id: 2,\n        title: 'Swimming',\n        completed: false,\n        editing: false\n      }]\n    };\n  },\n  created() {\n    this.eventBus.$on('removeTodo', id => this.removeTodo(id));\n    this.eventBus.$on('finishEdit', data => this.finishEdit(data));\n    this.eventBus.$on('editingTodo', data => this.editingTodo(data));\n    this.eventBus.$on('checkAllChanged', checked => this.checkAlltodo(checked));\n  },\n  computed: {\n    remaining() {\n      return this.todos.filter(todo => !todo.completed).length;\n    },\n    anyRemaining() {\n      return this.remaining != 0;\n    }\n  },\n  methods: {\n    addTodo() {\n      if (this.newTodo.trim().length == 0) {\n        alert('Please input what needs to be done');\n      } else if (checkString(this.newTodo) == false) {\n        alert('Must be string');\n      } else if (this.idlist.length > 0) {\n        this.todos.push({\n          id: this.idlist[this.idlist.length - 1],\n          title: this.newTodo,\n          completed: false,\n          editing: false\n        });\n        this.newTodo = '';\n        this.idlist.pop();\n      } else {\n        this.todos.push({\n          id: this.idForTodo,\n          title: this.newTodo,\n          completed: false,\n          editing: false\n        });\n        this.newTodo = '';\n        this.idForTodo++;\n      }\n    },\n    removeTodo(id) {\n      const index = this.todos.findIndex(item => item.id == id);\n      this.todos.splice(index, 1);\n      this.idlist.push(id);\n    },\n    checkAlltodo() {\n      this.todos.forEach(todo => todo.completed = event.target.checked);\n    },\n    finishEdit(data) {\n      const index = this.todos.findIndex(item => item.id == data.id);\n      this.todos.splice(index, 1, data);\n    },\n    editingTodo(data) {\n      const index = this.todos.findIndex(item => item.id == data.id);\n      this.todos.splice(index, 1, data);\n    }\n  }\n};","map":{"version":3,"names":["checkString","CrudItem","CrudRemanining","CrudCheckAll","name","components","data","newTodo","idForTodo","lastTitle","idlist","todos","id","title","completed","editing","created","eventBus","$on","removeTodo","finishEdit","editingTodo","checked","checkAlltodo","computed","remaining","filter","todo","length","anyRemaining","methods","addTodo","trim","alert","push","pop","index","findIndex","item","splice","forEach","event","target"],"sources":["src/components/MainCrud.vue"],"sourcesContent":["<template>\n    <div>\n        <input\n            type=\"text\"\n            class=\"todo-input\"\n            placeholder=\"What needs to be done\"\n            v-model=\"newTodo\"\n            @keyup.enter=\"addTodo\"\n        />\n        <button class=\"button\" v-on:click=\"addTodo\">ADD</button>\n        <crud-item\n            v-for=\"todo in todos\"\n            :key=\"todo.id\"\n            :todo=\"todo\"\n            :checkAll=\"!anyRemaining\"\n        >\n        </crud-item>\n        <div class=\"extra-container\">\n           <crud-check-all :anyRemaining=\"anyRemaining\"> </crud-check-all>\n            <crud-remanining :remaining=\"remaining\"></crud-remanining>\n        </div>\n    </div>\n</template>\n<script>\nimport checkString from './utils/validate';\nimport CrudItem from './CrudItem.vue';\nimport CrudRemanining from './CrudRemanining.vue';\nimport CrudCheckAll from './CrudCheckAll.vue';\n\nexport default {\n    name: 'todo-list',\n    components: {\n        CrudItem,\n        CrudRemanining,\n        CrudCheckAll,\n    },\n    data() {\n        return {\n            newTodo: '',\n            idForTodo: 3,\n            lastTitle: '',\n            idlist: [],\n            todos: [\n                {\n                    id: 1,\n                    title: 'Playing Football',\n                    completed: false,\n                    editing: false,\n                },\n                {\n                    id: 2,\n                    title: 'Swimming',\n                    completed: false,\n                    editing: false,\n                },\n            ],\n        };\n    },\n    created(){\n        this.eventBus.$on('removeTodo', (id) => this.removeTodo(id))\n        this.eventBus.$on('finishEdit', (data) => this.finishEdit(data))\n        this.eventBus.$on('editingTodo', (data) => this.editingTodo(data))\n        this.eventBus.$on('checkAllChanged', (checked) => this.checkAlltodo(checked))\n    },\n    computed: {\n        remaining() {\n            return this.todos.filter((todo) => !todo.completed).length;\n        },\n        anyRemaining() {\n            return this.remaining != 0;\n        },\n    },\n    methods: {\n        addTodo() {\n            if (this.newTodo.trim().length == 0) {\n                alert('Please input what needs to be done');\n            } else if (checkString(this.newTodo) == false) {\n                alert('Must be string');\n            } else if (this.idlist.length > 0) {\n                this.todos.push({\n                    id: this.idlist[this.idlist.length - 1],\n                    title: this.newTodo,\n                    completed: false,\n                    editing: false,\n                });\n                this.newTodo = '';\n                this.idlist.pop();\n            } else {\n                this.todos.push({\n                    id: this.idForTodo,\n                    title: this.newTodo,\n                    completed: false,\n                    editing: false,\n                });\n                this.newTodo = '';\n                this.idForTodo++;\n            }\n        },\n        removeTodo(id) {\n            const index = this.todos.findIndex((item) => item.id == id);\n            this.todos.splice(index, 1);\n            this.idlist.push(id);\n        },\n        checkAlltodo() {\n            this.todos.forEach(\n                (todo) => (todo.completed = event.target.checked),\n            );\n        },\n        finishEdit(data) {\n            const index = this.todos.findIndex((item) => item.id == data.id);\n            this.todos.splice(index, 1, data);\n        },\n        editingTodo(data) {\n            const index = this.todos.findIndex((item) => item.id == data.id);\n            this.todos.splice(index, 1, data);\n        }\n    },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style >\n.completed {\n    text-decoration: line-through;\n    color: grey;\n}\n.todo-item-left {\n    display: flex;\n    align-items: center;\n}\n.todo-item-label {\n    padding: 10px;\n    border: 1px solid white;\n    margin-left: 12px;\n}\n.todo-item-edit {\n    font-size: 24px;\n    color: #2c3e50;\n    margin-left: 12px;\n    width: 100%;\n    padding: 10px;\n    border: 1px solid #ccc;\n    font-family: 'Avenir', Arial, Helvetica, sans-serif;\n}\n.extra-container {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-size: 16px;\n    border-top: 1px solid lightgrey;\n    padding-top: 14px;\n    margin-bottom: 14px;\n  }\n.icon-trash {\n    width: 48px;\n    height: 48px;\n    position: relative;\n    overflow: hidden;\n    margin-left: 25px;\n    margin-bottom: 25px;\n    margin-top: 25px;\n}\n\n.icon-trash .trash-lid {\n    width: 62%;\n    height: 10%;\n    position: absolute;\n    left: 50%;\n    margin-left: -31%;\n    top: 10.5%;\n    background-color: #000;\n    border-top-left-radius: 80%;\n    border-top-right-radius: 80%;\n    -webkit-transform: rotate(-5deg);\n    -moz-transform: rotate(-5deg);\n    -ms-transform: rotate(-5deg);\n    transform: rotate(-5deg);\n}\n\n.icon-trash .trash-lid:after {\n    content: '';\n    width: 26%;\n    height: 100%;\n    position: absolute;\n    left: 50%;\n    margin-left: -13%;\n    margin-top: -10%;\n    background-color: inherit;\n    border-top-left-radius: 30%;\n    border-top-right-radius: 30%;\n    -webkit-transform: rotate(-1deg);\n    -moz-transform: rotate(-1deg);\n    -ms-transform: rotate(-1deg);\n    transform: rotate(-1deg);\n}\n\n.icon-trash .trash-container {\n    width: 56%;\n    height: 65%;\n    position: absolute;\n    left: 50%;\n    margin-left: -28%;\n    bottom: 10%;\n    background-color: #000;\n    border-bottom-left-radius: 15%;\n    border-bottom-right-radius: 15%;\n}\n\n.icon-trash .trash-container:after {\n    content: '';\n    width: 110%;\n    height: 12%;\n    position: absolute;\n    left: 50%;\n    margin-left: -55%;\n    top: 0;\n    background-color: inherit;\n    border-bottom-left-radius: 45%;\n    border-bottom-right-radius: 45%;\n}\n\n.icon-trash .trash-line-1 {\n    width: 4%;\n    height: 50%;\n    position: absolute;\n    left: 38%;\n    margin-left: -2%;\n    bottom: 17%;\n    background-color: #252527;\n}\n\n.icon-trash .trash-line-2 {\n    width: 4%;\n    height: 50%;\n    position: absolute;\n    left: 50%;\n    margin-left: -2%;\n    bottom: 17%;\n    background-color: #252527;\n}\n\n.icon-trash .trash-line-3 {\n    width: 4%;\n    height: 50%;\n    position: absolute;\n    left: 62%;\n    margin-left: -2%;\n    bottom: 17%;\n    background-color: #252527;\n}\n\na {\n    position: absolute;\n    bottom: 12px;\n    right: 20px;\n}\n.todo-input {\n    width: 400px;\n    padding: 10px 10px;\n    font-size: 18px;\n    margin-bottom: 16px;\n    margin-left: 12px;\n\n    \n}\n.todo-item {\n    margin-bottom: 12px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-family: 'Avenir', Arial, Helvetica, sans-serif;\n}\n.remove-item {\n    cursor: pointer;\n    margin-left: 14px;\n    \n}\n.button {\n    background: #ff4742;\n    border: 1px solid #ff4742;\n    border-radius: 6px;\n    box-shadow: rgba(0, 0, 0, 0.1) 1px 2px 4px;\n    box-sizing: border-box;\n    color: #ffffff;\n    cursor: pointer;\n    display: inline-block;\n    font-family: nunito, roboto, proxima-nova, 'proxima nova', sans-serif;\n    font-size: 16px;\n    font-weight: 800;\n    line-height: 16px;\n    min-height: 40px;\n    outline: 0;\n    padding: 12px 14px;\n    text-align: center;\n    text-rendering: geometricprecision;\n    text-transform: none;\n    user-select: none;\n    -webkit-user-select: none;\n    touch-action: manipulation;\n    vertical-align: middle;\n}\n.button:hover .button:active {\n    background-color: initial;\n    background-position: 0 0;\n    color: #ff4742;\n}\n\n.button:active {\n    opacity: 0.5;\n}\n.button {\n    margin-left: 121px;\n}\n.todo-input {\n    font-family: 'Avenir', Arial, Helvetica, sans-serif;\n}\n</style>\n"],"mappings":";AAwBA,OAAAA,WAAA;AACA,OAAAC,QAAA;AACA,OAAAC,cAAA;AACA,OAAAC,YAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAJ,QAAA;IACAC,cAAA;IACAC;EACA;EACAG,KAAA;IACA;MACAC,OAAA;MACAC,SAAA;MACAC,SAAA;MACAC,MAAA;MACAC,KAAA,GACA;QACAC,EAAA;QACAC,KAAA;QACAC,SAAA;QACAC,OAAA;MACA,GACA;QACAH,EAAA;QACAC,KAAA;QACAC,SAAA;QACAC,OAAA;MACA;IAEA;EACA;EACAC,QAAA;IACA,KAAAC,QAAA,CAAAC,GAAA,eAAAN,EAAA,SAAAO,UAAA,CAAAP,EAAA;IACA,KAAAK,QAAA,CAAAC,GAAA,eAAAZ,IAAA,SAAAc,UAAA,CAAAd,IAAA;IACA,KAAAW,QAAA,CAAAC,GAAA,gBAAAZ,IAAA,SAAAe,WAAA,CAAAf,IAAA;IACA,KAAAW,QAAA,CAAAC,GAAA,oBAAAI,OAAA,SAAAC,YAAA,CAAAD,OAAA;EACA;EACAE,QAAA;IACAC,UAAA;MACA,YAAAd,KAAA,CAAAe,MAAA,CAAAC,IAAA,KAAAA,IAAA,CAAAb,SAAA,EAAAc,MAAA;IACA;IACAC,aAAA;MACA,YAAAJ,SAAA;IACA;EACA;EACAK,OAAA;IACAC,QAAA;MACA,SAAAxB,OAAA,CAAAyB,IAAA,GAAAJ,MAAA;QACAK,KAAA;MACA,WAAAjC,WAAA,MAAAO,OAAA;QACA0B,KAAA;MACA,gBAAAvB,MAAA,CAAAkB,MAAA;QACA,KAAAjB,KAAA,CAAAuB,IAAA;UACAtB,EAAA,OAAAF,MAAA,MAAAA,MAAA,CAAAkB,MAAA;UACAf,KAAA,OAAAN,OAAA;UACAO,SAAA;UACAC,OAAA;QACA;QACA,KAAAR,OAAA;QACA,KAAAG,MAAA,CAAAyB,GAAA;MACA;QACA,KAAAxB,KAAA,CAAAuB,IAAA;UACAtB,EAAA,OAAAJ,SAAA;UACAK,KAAA,OAAAN,OAAA;UACAO,SAAA;UACAC,OAAA;QACA;QACA,KAAAR,OAAA;QACA,KAAAC,SAAA;MACA;IACA;IACAW,WAAAP,EAAA;MACA,MAAAwB,KAAA,QAAAzB,KAAA,CAAA0B,SAAA,CAAAC,IAAA,IAAAA,IAAA,CAAA1B,EAAA,IAAAA,EAAA;MACA,KAAAD,KAAA,CAAA4B,MAAA,CAAAH,KAAA;MACA,KAAA1B,MAAA,CAAAwB,IAAA,CAAAtB,EAAA;IACA;IACAW,aAAA;MACA,KAAAZ,KAAA,CAAA6B,OAAA,CACAb,IAAA,IAAAA,IAAA,CAAAb,SAAA,GAAA2B,KAAA,CAAAC,MAAA,CAAApB,OACA;IACA;IACAF,WAAAd,IAAA;MACA,MAAA8B,KAAA,QAAAzB,KAAA,CAAA0B,SAAA,CAAAC,IAAA,IAAAA,IAAA,CAAA1B,EAAA,IAAAN,IAAA,CAAAM,EAAA;MACA,KAAAD,KAAA,CAAA4B,MAAA,CAAAH,KAAA,KAAA9B,IAAA;IACA;IACAe,YAAAf,IAAA;MACA,MAAA8B,KAAA,QAAAzB,KAAA,CAAA0B,SAAA,CAAAC,IAAA,IAAAA,IAAA,CAAA1B,EAAA,IAAAN,IAAA,CAAAM,EAAA;MACA,KAAAD,KAAA,CAAA4B,MAAA,CAAAH,KAAA,KAAA9B,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}